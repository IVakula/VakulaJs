//1. 'number'+3+3

/*Результат: number33, Тип: String.
Пояснення:
'number' - це текст типу String;
3 - число, тип Number;
3 - число, тип Number;
При конкатенації значень відбувається неявне перетворення типів до загального типу String.
*/

//2. null + 3

/*Результат: 3, Тип: Number.
Пояснення:
null - це "Порожність", що відповідає булевомоу false. Js приводить false до числа 0;
3 - число, тип Number;
Відбувається в результаті знаходження суми двох чисел 0 та 3.
*/

//3. 5 && "qwerty"

/*Результат: qwerty, Тип: String.
Пояснення:
Логічний оператор && повертає true, якщо обидва операнди є true. 
В нашому випадку число 5 приводиться до true та непорожній рядок тексту також приводиться до true.
А так, як цикл перевірки дійшов до кінця, то повертаєтья останнє обчислене значення "qwerty".
*/

//4. +'40'+ +'2' + "hillel"

/*Результат: 42hillel, Тип: String.
Пояснення:
'40' - це рядок типу String, але "+" перед ним приводить рядок до типу Number;
'2' - це рядок типу String, але "+" перед ним приводить рядок до типу Number;
"hillel" - це рядок типу String.
Спочатку Js виконує додавання чисел 40 та 2, а потім, виконуючи конкатенацію, здійснює неявне перетворення типу Number числа "42" до типу String.
*/

//5. '10'- 5 === 6

/*Результат: false, Тип: Boolean.
Пояснення:
'10' - це рядок типу String;
5 - число типу Number;
Спочатку відувається неявне перетворення рядка '10' типу String на число типу Number,
потім знаходиться різниця чисел "10-5", а вже потім відбувається строге порівняння чисел "5" та "6".
Так як 5 не дорівнює 6, виводиться результат false. 
*/

//6. true + false

/*Результат: 1, Тип: Number.
Пояснення:
true  - значення типу Boolean;
false - значення типу Boolean;
Щоб знайти суму цих двох значень, Js перетворює їх на числа. True = 1, а false = 0 віповідно. Сума чисел "1+0" дорівнює 1. 
*/

//7. '4px'- 3

/*Результат: NaN, Тип: Number.
Пояснення:
'4px' - це рядок типу String;
Js намагається для виконання віднімання перетворити рядок типу String на число, але не може це зробити, тому вертає NaN.
*/

//8. '4'-3

/*Результат: 1, Тип: Number.
Пояснення:
'4' - це рядок типу String;
3 - число типу Number;
Спочатку відувається неявне перетворення рядка '4' типу String на число типу Number,
потім знаходиться різниця чисел "4-3", що дорівнює 1. 
*/


//9. '6'+ 3**0

/*Результат: 61, Тип: String.
Пояснення:
'6' - це рядок типу String;
3 - число типу Number;
Спочатку відбувається зведення в ступінь 0 числа 3 (дорівнює 1), а потім конкатенація з неявним перетворенням числа "1" типу Number до типу String.
В результаті виводиться рядок "61" типу String. 
*/


//10. 12 / '6'

/*Результат: 2, Тип: Number.
Пояснення:
12 - число типу Number;
'6' - це рядок типу String;
Спочатку відувається неявне перетворення рядка '6' типу String на число типу Number, а потім здійснюється операція ділення двох чисел "12/6".
*/


//11. '10'+ (5 === 6)

/*Результат: 10false, Тип: String.
Пояснення:
'10' - це рядок типу String;
5 - число типу Number;
6 - число типу Number;
Спочатку відбувається строге порівняння чисел "5" та "6" (результат false).
Потім відбувається неявне перетворенная значення false типу Boolean на рядок "false" типу String з подальшою конкатенацією с рядком "10".
*/


//12. null == ''

/*Результат: false, Тип: Boolean.
Пояснення:
null - це 'Порожність' або нічого;
'' - пустий рядок;
При порівнянні типу null з порожнім рядком (при перетворенні на Number дає "0") результат завжди буде false.
*/


//13. 3**(9/3)

/*Результат: 27, Тип: Number.
Пояснення:
3 - число типу Number;
9 - число типу Number;
3 - число типу Number;
Спочатку відбувається операція ділення двох чисел "9" та "3" (Результат - 3). А потім відувається зведення в ступінь 3 числа 3, що дорівнює 27.
*/


//14. !!'false' == !!'true'

/*Результат: true, Тип: Boolean.
Пояснення:
'true'  - рядок типу String;
'false'  - рядок типу String;
Після автоматичного приведення типів до типу Boolean для порівняння радок 'true' має значення true (непустий рядок) і рядок 'false'  має значення true (непустий рядок).
! - заперечення.
!! - подвійне заперечення.
В результаті: 
'false' - це true;
!'false' - це false;
!!'false' - це true.
Аналогічно:
'true' - це true;
!'true' - це false;
!!'true' - це true.
В кінці кінців ми порівнюємо між собою два значення типу Boolean (true та true), що дає результат true.
*/


//15. 0 || '0' && 1

/*Результат: 1, Тип: Number.
Пояснення:
'0'  - рядок типу String;
0 - число типу Number; 
1 - число типу Number; 
Оператор || повертає true, так як один з операндів (перевіряє число "0" та рядок "'0'") є true.
'0' - це непустий рядок, тобто true.
0 - це false.
Оператор && повертає true, так як обидва операнда є true (результат першої перевірки (true = 1) та число "1"), та видає останнє значання 1.
*/


//16. (+null == false) < 1

/*Результат: false, Тип: Boolean.
Пояснення:
Спочатку Js приводить "+null" в число типу Number (тобто 0), а потім значення false типу Boolean в число 0 типу Number.
Оператор "==" порівнює два значення отриманих чисел. Результат порівняння - true.
Потім Js переводить true в число (тобто до числа 1) і порівнює його з заданим число "1".
Так, як "1<1"  - це невірне твердження, то в результаті порівняння повертається false.
*/


//17. false && true || true

/*Результат: true, Тип: Boolean.
Пояснення:
Оператор && повертає false, так як не обидва з операндів є true.
Потім оператор || повертає true, так як другий операнд є true (тобто хоча б один).
*/


//18. false && (false || true)

/*
/*Результат: false, Тип: Boolean.
Пояснення:
Спочатку виконується оператор в дужках. 
Цей оператор || повертає true, так як другий операнд є true (тобто хоча б один).
Далі оператор && повертає false, так як не обидва з операндів є true.
*/


//19. (+null == false) < 1**5

/*Результат: false, Тип: Boolean.
Пояснення:
Спочатку Js приводить "+null" в число типу Number (тобто 0), а потім значення false типу Boolean в число 0 типу Number.
Оператор "==" порівнює два значення отриманих чисел. Результат порівняння - true.
Потім відбувається операція зведення числа 1 в ступінь 5, що дорівнює 1.
Потім Js переводить true в число (тобто до числа 1) і порівнює його зі знайденим числом "1".



Так, як "1<1"  - це невірне твердження, то в результаті порівняння повертається false.
*/

